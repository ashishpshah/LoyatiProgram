@model ResponseModel<LoyaltyPointViewModel>
@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1 class="m-0">Loyalty Point</h1>
			</div>
			<div class="col-sm-6">
				<div class="float-sm-right">
					@if (Common.IsAdmin() && Model.IsCreate == true)
					{
						<button type="button" id="btnAddNewItem" class="btn btn-primary btn-md pull-right mr-2 divformSave_Hide" onclick="fnLoadParialView_Custom();">
							<i class="fas fa-plus"></i> &nbsp; Add new item
						</button>
						<button type="button" id="btnBackToList" class="btn btn-warning btn-md pull-right mr-2 divformSave_Display d-none" onclick="fnCloseParialView('divformSave');">
							<i class="fas fa-arrow-left"></i> &nbsp; Back To List
						</button>
					}
				</div>
			</div>
		</div>
	</div>
</div>

<section class="content">
	<div class="container-fluid">

		@if (!Common.IsAdmin())
		{
			<div class="row no-gooters">
				<section class="col-md-6 row no-gooters">
					<div class="col-md-6">
						<!-- small box -->
						<div class="small-box bg-info">
							<div class="inner">
								<h3>@Model.ObjList?.Sum(x => x.Points)</h3>

								<p>Total Earned</p>
							</div>
							<div class="icon">
								<i class="ion ion-bag"></i>
							</div>
						</div>
					</div>
					@{
						var now = DateTime.Now;
						decimal alreadyExpiredPoints = 0;
						decimal laterExpirePoints = 0;
						decimal totalRemainingPoints = 0;
						decimal thisMonthEarnedPoints = 0;

						if (Model.ObjList != null)
						{
							foreach (var item in Model.ObjList)
							{
								var earned = new DateTime(item.ClaimedDate_Ticks);

								var expiry = new DateTime(item.ExpiryDate_Ticks);

								if (expiry.Date <= now.Date)
								{
									// Already expired (all time)
									alreadyExpiredPoints += item.Points;
								}
								else
								{
									// Future expiry (total remain)
									totalRemainingPoints += item.Points;

									// Specifically expiring later in this month
									if (expiry.Year == now.Year && expiry.Month == now.Month)
									{
										laterExpirePoints += item.Points;
									}
								}

								// This month earned
								if (earned.Year == now.Year && earned.Month == now.Month)
								{
									thisMonthEarnedPoints += item.Points;
								}
							}
						}
					}

					<div class="col-md-6">
						<!-- small box -->
						<div class="small-box bg-success">
							<div class="inner">
								<h3>@totalRemainingPoints</h3>
								<p>Total Remaining</p>
							</div>
							<div class="icon">
								<i class="ion ion-stats-bars"></i>
							</div>
						</div>
					</div>

					<div class="col-md-6">
						<!-- small box -->
						<div class="small-box bg-teal">
							<div class="inner">
								<h3>@thisMonthEarnedPoints</h3>
								<p>This Month Earned</p>
							</div>
							<div class="icon">
								<i class="ion ion-stats-bars"></i>
							</div>
						</div>
					</div>

					<div class="col-md-6">
						<!-- small box -->
						<div class="small-box bg-danger">
							<div class="inner">
								<h3>@alreadyExpiredPoints</h3>
								<p>Already Expired Till Today</p>
							</div>
							<div class="icon">
								<i class="ion ion-stats-bars"></i>
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<div class="small-box bg-warning">
							<div class="inner">
								<h3>@laterExpirePoints</h3>
								<p>Expiring Later This Month</p>
							</div>
							<div class="icon">
								<i class="ion ion-stats-bars"></i>
							</div>
						</div>
					</div>
				</section>
				<section class="col-md-6">
					<div class="card">
						<div class="card-header border-0">
							<h3 class="card-title">QR Code Scan History</h3>
						</div>
						<div class="card-body table-responsive p-0">
							<table class="table table-striped table-valign-middle">
								<thead>
									<tr>
										<th>Date</th>
										<th>Points</th>
										<th>Expiry Date</th>
									</tr>
								</thead>
								<tbody>
									@if (Model.ObjList != null)
									{
										foreach (var item in Model.ObjList.OrderByDescending(x => x.ClaimedDate_Ticks).ToList())
										{
											<tr>
												<td> @item.ClaimedDate_Text </td>
												<td> @item.Points </td>
												<td> @item.ExpiryDate_Text </td>
											</tr>
										}
									}
								</tbody>
							</table>
						</div>
					</div>
				</section>
			</div>

		}
		else if (Common.IsAdmin())
		{
			<div class="row no-gooters">
				<section class="col-md-12">
					<div class="card">
						<div class="card-header divformSave_Display d-none" style="margin: 5px !important;">
							<form id="formSave" action="@Url.Action("Save","LoyaltyPoint")" method="post">
								<div class="row no-gutters" id="divformSave"> </div>
								<div class="clearfix"></div>
								<hr />
							</form>
						</div>

						<div class="card-body">
							<div class="row no-gooters divformSave_Hide">
								<div class="col-md-12 my-1">
									<table class="table table-bordered table-striped table-hover w-100" id="dataTable_LoyaltyPoint"></table>
								</div>
								<input type="hidden" id="searchTerm" value="@(Model.Data5!=null ? Model.Data5:"")" />
								<div class="clearfix"></div>
							</div>
						</div>
					</div>
				</section>
			</div>

		}
	</div>
</section>

@section Scripts {

	@if (Common.IsAdmin())
	{
		<script type="text/javascript">

			var dataTableMain = null;

			const inputValue = 1;
			const inputStep = 1;

			$(document).ready(function () {
				setTimeout(function () {
					fnLoadTableData();
				}, 1000);
			});

			function fnLoadParialView_Custom() {
				Swal.fire({
					title: 'How many QR Code do you want to Generate ?',
					//html: `<input type="number" value="${inputValue}" step="${inputStep}" class="swal2-input" id="range-value">`,
					html: `				<div class="mb-3">
																		  <label class="m-0">Enter Quantity</label>
															  <input type="number" value="${inputValue}" step="${inputStep}" class="swal2-input my-2" id="range-value">
															  <input type="range" value="${inputValue}" min="1" max="25" step="${inputStep}" class="form-range w-100" id="range-slider">
													</div>

																<div class="mt-3 mb-3">
																		  <label class="m-0">Select Min-Max Points</label>
															  <div id="bootstrap-range-slider"></div>
															  <div class="d-flex justify-content-center mt-0">
																			<input type="number" id="minValue" class="form-control mr-2 text-center my-2" style="width: 100px;" value="10" max="100" />
																			<input type="number" id="maxValue" class="form-control ml-2 text-center my-2" style="width: 100px;" value="35" max="100" />
															  </div>
													</div>

																<div class="mb-3">
																					<label class="m-0">Expire In Day(s)</label>
																					<input type="number" value="30" step="${inputStep}" class="swal2-input my-2" id="range-value-expire">
																		<input type="range" value="30" min="0" max="90" step="${inputStep}" class="form-range w-100" id="range-slider-expire">
																</div>

																																									  `,
					// input: 'range',
					// inputValue,
					// inputAttributes: { min: '1', max: '25', step: inputStep.toString(), },
					didOpen: () => {
						const $popup = $(Swal.getPopup());
						const $inputNumber = $popup.find('#range-value');
						const $inputRange = $popup.find('#range-slider');
						$inputRange.on('input', function () { $inputNumber.val($(this).val()); });
						$inputNumber.on('change', function () { $inputRange.val($(this).val()); });

						const $inputNumber_expire = $popup.find('#range-value-expire');
						const $inputRange_expire = $popup.find('#range-slider-expire');
						$inputRange_expire.on('input', function () { $inputNumber_expire.val($(this).val()); });
						$inputNumber_expire.on('change', function () { $inputRange_expire.val($(this).val()); });

					},
					showCancelButton: true,
					confirmButtonText: 'Generate'
				}).then((result) => {
					if (result.isConfirmed) {
						debugger;

						const minInput = $($(Swal.getPopup())).find('#minValue');
						const maxInput = $($(Swal.getPopup())).find('#maxValue');

						fnLoadParialView('divformSave', '@Url.Action("Partial_AddEditForm", "LoyaltyPoint")?NoOfRows=' + $($(Swal.getPopup())).find('#range-value').val() + '&ExpireInDay=' + $($(Swal.getPopup())).find('#range-value-expire').val() + '&minValue=' + minInput + '&maxValue=' + maxInput);
					}
					else dataTableMain.ajax.reload();

				})

			}

			function fnLoadTableData() {
				if ($.fn.DataTable.isDataTable('#dataTable_LoyaltyPoint')) {
					$('#dataTable_LoyaltyPoint').DataTable().destroy();
				}

				dataTableMain = $("#dataTable_LoyaltyPoint").DataTable({
					"destroy": true,
					"pageLength": 50,
					"lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
					"sAjaxSource": "@Url.Action("GetData", "LoyaltyPoint")",
					"bServerSide": true,
					"bProcessing": true,
					"bSearchable": true,
					"order": [[5, 'desc']],
					"language": { "emptyTable": "No record found.", "processing": '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> ' },
					"fnServerParams": function (aoData) {
						//aoData.push({ "name": "PoNo", "value": "" + $('#PoNo').val() });
						aoData.push({ "name": "sSearch", "value": $('#searchTerm').val() });
					},
					"columns": [
						{ "title": "#", "data": null, "autoWidth": false, "searchable": true, "width": "5%", "class": "text-center" },
						{
							"title": "QR Code Image", "data": null, "autoWidth": false, "searchable": false,
							"render": function (data, type, row, meta) {
								return '<img src="data:image/png;base64,' + data.QrCode_Base64 + '" class="img-fluid" width="100" alt="QR Code">';
							}
						},
						{ "title": "QR Code", "data": "QrCode", "autoWidth": true, "searchable": true },
						{ "title": "Points", "data": "Points", "autoWidth": true, "searchable": true },
						{ "title": "Generate Date", "data": "GenerateDate_Text", "autoWidth": true, "searchable": true },
						{ "title": "Is Claimed ?", "data": "IsClaimed_Text", "autoWidth": true, "searchable": true },
						{ "title": "Claimed By", "data": "ClaimedBy", "autoWidth": true, "searchable": true },
						{ "title": "Claimed Date", "data": "ClaimedDate_Text", "autoWidth": true, "searchable": true },
						{
							"title": "Action", "data": null, "autoWidth": false, "searchable": false, "width": "5%",
							"render": function (data, type, row, meta) {
								if (data.IsClaimed == false)
									return '<div class="btn-group"><a class="btn btn-danger btn-sm btn-flat ml-2" href="javascript:void(0);" onclick="divShow(\'/DeleteConfirmed?Id=' + data.Id + '\');"><span class="nme"><i class="far fa-trash-alt"></i></span></a></div>';
								else return '';
							}
						}
					],
					"fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
						var index = iDisplayIndexFull + 1;
						$("td:first", nRow).html(index);
						return nRow;
					}
					, initComplete: function (settings, json) {
						debugger;
						$('#searchTerm').val('').trigger('change');
					}
				});

			}

			function fnParialView_Loaded_Success($id, $isAlert) {
				debugger;

				$('html, body').scrollTop($('#' + $id).offset().top);

			}

			// function fnParialView_Close_Success($id) {
			// 	debugger;
			// 	dataTableMain.ajax.reload();
			// }
		</script>
	}
}
