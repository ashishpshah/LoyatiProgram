@{
	ViewBag.Title = "Home Page";
	Layout = "~/Views/Shared/_Layout.cshtml";

	var listPlant = Common.GetUserPlantAccesses();
}

<div class="content-header">
	<h1 class="m-0">Dashboard</h1>
</div>


<section class="content">
	<div class="container-fluid">

		@if (Common.IsDealer())
		{
			(decimal totalPoints, decimal currentMonthPoints, decimal lastMonthPoints, int totalOrders, int currentMonthOrders, int lastMonthOrders) data1 = ((decimal)(Model.Data1.Item1 ?? 0), (decimal)(Model.Data1.Item2 ?? 0), (decimal)(Model.Data1.Item3 ?? 0), (int)(Model.Data1.Item4 ?? 0), (int)(Model.Data1.Item5 ?? 0), (int)(Model.Data1.Item6 ?? 0));

			<div class="row">
				<div class="col-md-6 ">
					<p class="text-center">
						<strong>Points Summary</strong>
					</p>

					<div class="row">
						<div class="col-md-4">
							<div class="info-box mb-3 bg-success">
								<span class="info-box-icon"><i class="fas fa-tag"></i></span>

								<div class="info-box-content">
									<span class="info-box-text">Total Earned</span>
									<span class="info-box-number">@data1.totalPoints</span>
								</div>
							</div>
							<div class="info-box mb-3 bg-navy">
								<span class="info-box-icon"><i class="far fa-comment"></i></span>

								<div class="info-box-content">
									<span class="info-box-text">Total Orders</span>
									<span class="info-box-number">@data1.totalOrders</span>
								</div>
							</div>
						</div>
						<div class="col-md-4">
							<div class="info-box mb-3 bg-teal">
								<span class="info-box-icon"><i class="far fa-heart"></i></span>

								<div class="info-box-content">
									<span class="info-box-text">Current Month Earned</span>
									<span class="info-box-number">@data1.currentMonthPoints</span>
								</div>
							</div>
							<div class="info-box mb-3 bg-purple">
								<span class="info-box-icon"><i class="far fa-heart"></i></span>

								<div class="info-box-content">
									<span class="info-box-text">Current Month Orders</span>
									<span class="info-box-number">@data1.currentMonthOrders</span>
								</div>
							</div>

						</div>
						<div class="col-md-4">
							<div class="info-box mb-3 bg-info">
								<span class="info-box-icon"><i class="fas fa-cloud-download-alt"></i></span>

								<div class="info-box-content">
									<span class="info-box-text">Last Month Earned</span>
									<span class="info-box-number">@data1.lastMonthPoints</span>
								</div>
							</div>
							<div class="info-box mb-3 bg-lightblue">
								<span class="info-box-icon"><i class="fas fa-cloud-download-alt"></i></span>

								<div class="info-box-content">
									<span class="info-box-text">Last Month Orders</span>
									<span class="info-box-number">@data1.lastMonthOrders</span>
								</div>
							</div>
						</div>
					</div>
				</div>

				@if (Model.Data2 != null)
				{
					<div class="col-md-6">
						<p class="text-center">
							<strong>Goal Completion</strong>
						</p>

						@for (int i = 0; i < (Model.Data2.Count > 5 ? 5 : Model.Data2.Count); i++)
						{
							<div class="progress-group">
								@(Model.Data2[i].SchemeName + " - " + Model.Data2[i].Product + " " + Model.Data2[i].SKUSize + " " + Model.Data2[i].PackageType + " - for " + Model.Data2[i].TotalEarnedPoints + " points")
								<span class="float-right"><b>@Model.Data2[i].TotalOrderQty</b>/@Model.Data2[i].MaxPurchaseQty</span>
								<div class="progress progress-sm">
									<div class="progress-bar @(i>4 ?"bg-danger":(i>3 ?"bg-purple":(i>2 ?"bg-lightblue":(i>1 ?"bg-teal":(i>0 ?"bg-success":"bg-primary")))))" style="width: @((Model.Data2[i].TotalOrderQty/@Model.Data2[i].MaxPurchaseQty) * 100)%"></div>
								</div>
							</div>
						}

					</div>
				}
			</div>


			<div class="row">
				<div class="col-md-12">
					<div class="card card-danger">
						<div class="card-header">
							<h3 class="card-title">Scheme(s) Information</h3>
							<div class="card-tools"> </div>
						</div>
						<div class="card-body">
							<div class="row chartSchemes">
								@if (Model.Data2 != null)
								{
									@for (int i = 0; i < (Model.Data2.Count > 5 ? 5 : Model.Data2.Count); i++)
									{
										<div class="col-md-4">
											<canvas id="chartScheme_@i" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"
													data-title="@(Model.Data2[i].SchemeName + " - " + Model.Data2[i].Product + " " + Model.Data2[i].SKUSize + " " + Model.Data2[i].PackageType + " - for " + Model.Data2[i].TotalEarnedPoints + " points")"
													data-per="@(Math.Round(Model.Data2[i].TotalOrderQty / Model.Data2[i].MaxPurchaseQty, 2) * 100)"
													data-min="@Model.Data2[i].TotalOrderQty" data-max="@Model.Data2[i].MaxPurchaseQty"></canvas>
										</div>
									}
								}
							</div>
						</div>
						<!-- /.card-body -->
					</div>
				</div>
			</div>
		}
		else
		{
			<div class="row no-gutters pt-5">
				<div class="col-12 w-100">
					<div class="panel-divider">
						<span style="background-color: #f4f6f9;">Plant Access</span>
						<div class="row no-gutters">
							<div class="col-12 p-0 m-0 shadow-none mt-3">
								<div class="form-group clearfix">
									@if (listPlant != null)
									{
										foreach (var item in listPlant)
										{
											if (Common.Get_Session_Int(SessionKey.KEY_USER_PLANT_ID) == item.Id)
											{
												<div class="icheck-primary d-inline mr-5">
													<input type="radio" id="radioPrimary_@item.Id" name="PlantID" data-plantid="@item.Id" checked>
													<label for="radioPrimary_@item.Id"> @item.PlantName</label>
												</div>
											}
											else
											{
												<div class="icheck-primary d-inline mr-5">
													<input type="radio" id="radioPrimary_@item.Id" name="PlantID" data-plantid="@item.Id">
													<label for="radioPrimary_@item.Id"> @item.PlantName</label>
												</div>
											}
										}
									}

								</div>
							</div>
						</div>

					</div>
				</div>
			</div>

			<div class="row">
				<div class="col-lg-3 col-6">
					<!-- small box -->
					<div class="small-box bg-info">
						<div class="inner">
							<h3>150</h3>

							<p>New Orders</p>
						</div>
						<div class="icon">
							<i class="ion ion-bag"></i>
						</div>
						<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
					</div>
				</div>
				<!-- ./col -->
				<div class="col-lg-3 col-6">
					<!-- small box -->
					<div class="small-box bg-success">
						<div class="inner">
							<h3>50000</h3>

							<p>Dispatch Quantity</p>
						</div>
						<div class="icon">
							<i class="ion ion-stats-bars"></i>
						</div>
						<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
					</div>
				</div>
				<!-- ./col -->
				<div class="col-lg-3 col-6">
					<!-- small box -->
					<div class="small-box bg-warning">
						<div class="inner">
							<h3>10000</h3>

							<p>Production Quantity</p>
						</div>
						<div class="icon">
							<i class="ion ion-person-add"></i>
						</div>
						<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
					</div>
				</div>
				<!-- ./col -->
			</div>

			<div class="row">
				<div class="col-12">
					<div class="card card-body table-responsive p-0">
						<table class="table table-striped table-valign-middle">
							<thead>
								<tr>
									<th>Total NEP in Market </th>
									<th>Next Month</th>
									<th>After 2 Months</th>
									<th>After 3 Months</th>
									<th width="5%">More</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>Stock Value</td>
									<td>50000</td>
									<td>25000</td>
									<td>75000</td>
									<td><a href="#" class="text-muted showProduct"><i class="fas fa-eye"></i></a></td>
								</tr>
								<tr>
									<td>Stock Qty</td>
									<td>50</td>
									<td>20</td>
									<td>80</td>

									<td><a href="#" class="text-muted showProduct"><i class="fas fa-eye"></i></a></td>
								</tr>
							</tbody>
						</table>
					</div>
				</div>
			</div>
		}
	</div>

</section>

@if (Common.IsDealer()) { }
else
{
	@section scripts {
	<script type="text/javascript">

		$(document).on('change', 'input[type="radio"]', function (event) {
			ajaxPost('@Url.Action("Change_Plant", "Home", new { area = "" })?id=' + $(this).attr('data-plantid'), window.location.href)
		});

		$(document).ready(function () {
			$(".showProduct").on("click", function () {
				Swal.fire({
					title: 'Product Details',
					html: `
																																																							<table>
																																																							  <thead>
																																																								<tr>
																																																								  <th>Product Name</th>
																																																								  <th>Pkg Type</th>
																																																								  <th>SKU</th>
																																																								</tr>
																																																							  </thead>
																																																							  <tbody>
																																																								<tr>
																																																								  <td>Red Chilli Seed</td>
																																																								  <td>Jar</td>
																																																								  <td>100 g</td>
																																																								</tr>
																																																								<tr>
																																																								  <td>Potato Seed</td>
																																																								  <td>Pouch</td>
																																																								  <td>20 g</td>
																																																								</tr>
																																																							  </tbody>
																																																							</table>
																																																						  `,
					width: 600,
					icon: 'info',
					confirmButtonText: 'OK'
				});
			});
		});
	</script>


	}
}

@section Scripts {
	<script src="~/plugins/chart.js/Chart.js"></script>

	<script type="text/javascript">
		$(document).ready(function(){

			$('.chartSchemes canvas').each(function (index, ele) {
				var $canvas = $(this);

				// Read attributes
				var percent = parseFloat($canvas.attr('data-per'));
				var title = $canvas.attr('data-title');

				// Determine color dynamically (descending order example)
				var filledColor =
					index % 5 == 0 ? "rgba(40,167,69,1)" :
					index % 4 == 0 ? "rgba(0,128,128,1)" :
					index % 3 == 0 ? "rgba(173,216,230,1)" :
					index % 2 == 0 ? "rgba(128,0,128,1)" : "rgba(128,0,128,1)" ;

				var ctx = $canvas[0].getContext('2d');

				new Chart(ctx, {
					type: 'doughnut',
					data: {
						labels: [title],
						datasets: [{
							data: [percent, 100 - percent],
							backgroundColor: [
								filledColor,
								'rgba(200,200,200,0.2)'
							],
							borderWidth: 0
						}]
					},
					events:[],
					options: {
						cutout: '50%',
						plugins: {
							legend: {
								display: true,
								labels: {
									color: 'rgb(255, 99, 132)'
								}
							},
							tooltip: { enabled: false },
							subtitle: {
								display: true,
								text: 'Custom Chart Subtitle'
							}
						},
						hover: { mode: null }
					},
					plugins: [{
						id: 'centerText',
						beforeDraw: function (chart) {
							var width = chart.width,
								height = chart.height,
								ctx = chart.ctx,
								chartArea = chart.chartArea,
								opts = chart.options,
								animationOpts = opts.animation,
								arcOpts = opts.elements.arc,
								centerX = (chartArea.left + chartArea.right) / 2,
								centerY = (chartArea.top + chartArea.bottom) / 2,
								startAngle = opts.rotation, // non reset case handled later
								endAngle = opts.rotation,
								innerRadius = chart.innerRadius,
								outerRadius = chart.outerRadius; // non reset case handled later

							debugger;
							ctx.restore();

							// // Title (small text above)
							// ctx.font = "bold 12px sans-serif";
							// ctx.fillStyle = "#666";
							// ctx.textAlign = "center";
							// ctx.textBaseline = "middle";
							// ctx.fillText(title, width / 2, height / 2 - 10);

							// Percentage (big text)
							ctx.font = "bold 18px sans-serif";
							ctx.fillStyle = "#000";
							ctx.textAlign = "center";
							ctx.textBaseline = "middle";
							ctx.fillText(percent + "%", (width / 2), (height / 2) + 20);

							//ctx.font = helpers.fontString(opts.defaultFontSize, opts.defaultFontStyle, opts.defaultFontFamily);
							ctx.fillStyle = "#000";
							ctx.textBaseline = "top";
							ctx.textAlign = "center";

							// Round percentage in a way that it always adds up to 100%
							debugger;
							var segmentLabelText = chart.data.datasets[0].data[0];
							ctx.fillText(segmentLabelText + "%", centerX, centerY);

							ctx.save();
						}
					}]
				});
			});
		})
	</script>
}